Description: Vikram Panth/ My Infra & Network setup

Parameters:

  EnvironmentName:
    Description: An Environment name that will be prefixed to resources
    Type: String

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this
    Type: String

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    
Resources:

  CapstoneVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
      - Key: Name 
        Value: !Ref EnvironmentName

  CapstoneIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  VPCnIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref CapstoneIGW
      VpcId: !Ref CapstoneVPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CapstoneVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub $(EnvironmentName) Public Subnet AZ1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CapstoneVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub $(EnvironmentName) Public Subnet AZ2

# After you create a route table, you can add routes and associate the table with a subnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CapstoneVPC
      Tags:
      - Key: Name
        Value: !Sub $(EnvironmentName) Public Routes

# Specifies a route in a route table within a VPC, which is added to an Internet gateway
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCnIGWAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref CapstoneIGW

# Association causes traffic originating from the subnet to be routed according to the routes in the route table
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

# Association causes traffic originating from the subnet to be routed according to the routes in the route table
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
      
Outputs: 

  VPC: 
      Description: A reference to the created VPC
      Value: !Ref CapstoneVPC
      Export:
        Name: !Sub ${EnvironmentName}-VPCID

  VPCPublicRouteTable:
      Description: Public Routing
      Value: !Ref PublicRouteTable
      Export:
        Name: !Sub ${EnvironmentName}-PUB-RT

  PublicSubnets:
      Description: A list of the public subnets
      Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PUB-NETS

  PublicSubnet1:
      Description: A reference to the public subnet in the 1st Availability Zone
      Value: !Ref PublicSubnet1
      Export:
        Name: !Sub ${EnvironmentName}-PUB1-SN

  PublicSubnet2: 
      Description: A reference to the public subnet in the 2nd Availability Zone
      Value: !Ref PublicSubnet2
      Export:
        Name: !Sub ${EnvironmentName}-PUB2-SN
