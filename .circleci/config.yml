version: 2.1

defaultpythonimage: &defaultpythonimage
  docker:
    - image: python:3.7-alpine3.11

orbs:
  aws-cli: circleci/aws-cli@1.3.0

jobs:

  build:
    <<: *defaultpythonimage
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13      
      - run:
          name: Install Docker client
          command: apk add docker-cli
      - run:
          name: Build
          command: |
            apk update && apk add bash
            echo "Build Docker Image"
            chmod +x run_docker.sh
            ./run_docker.sh

  lint:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: "Linting"
          command: |
            apk update
            apk add --update make
            make install
            make lint

  upload-image:
    <<: *defaultpythonimage
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13      
      - run:
          name: Install Docker client
          command: apk add docker-cli
      - run:
          name: "Build Image"
          command: |
            apk update && apk add bash
            chmod +x build_docker.sh
            ./build_docker.sh
      - run:
          name: "Upload to docker Hub"
          command: |
            chmod +x upload_docker.sh
            ./upload_docker.sh

  deploy:
    docker:
      - image: sleavely/node-awscli
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update
      - run:
          name: Deploy frontend objects
          command: |
            ls -la
           # can use sync . to upload all new files

  smoke-test:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - attach_workspace:
          at: ~/      
      - run:
          name: Install dependencies
          command: |
            apk add --update curl
      - run:
          name: Frontend smoke test.
          command: |
            URL="https://udapeople-${CIRCLE_WORKFLOW_ID}.s3-website-us-west-2.amazonaws.com"
            echo $URL          
            if curl -s ${URL} | grep "Welcome"
              then
                echo "if"
                return 0
              else
                echo "else"
                return 0
            fi            

  cleanup:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apk add --no-cache python3 py3-pip \
            && pip3 install --upgrade pip \
            && pip3 install awscli
      - run:
          name: Get old pipeline and Remove old stacks and files
          command: |
            echo "test"
            if [ -z "${OldWorkflowID}" ]
              then
                echo "No old Id and empty"
              else
                aws cloudformation delete-stack --stack-name frontend-${OldWorkflowID}
            fi

workflows:
  default:
    jobs:
      - build
      - lint:
          requires: [build]
      - upload-image:
          requires: [lint]
      - deploy:
          requires: [upload-image]
          filters:
            branches:
              only: [master-test]          
      - smoke-test:
          requires: [deploy-frontend]
      - cleanup:
          requires: [smoke-test]
