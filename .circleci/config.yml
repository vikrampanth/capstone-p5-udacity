version: 2.1

defaultpythonimage: &defaultpythonimage
  docker:
    - image: python:3.7-alpine3.11

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0
  aws-cli: circleci/aws-cli@1.3.0

commands:
  aws-cli-setup-python:
    description: Install AWS CLI
    steps:
      - run:
          name: Install AWS command
          command: |
            apk add --no-cache python3 py3-pip \
            && pip3 install --upgrade pip \
            && pip3 install awscli

jobs:

  lint:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update
            apk add --update make
      - run:
          name: "Linting"
          command: |
            make hadolint-install
            make lint

  build-upload-image:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update && apk add bash
      - setup_remote_docker:
          version: 19.03.13      
      - run:
          name: Install Docker client
          command: apk add docker-cli
      - run:
          name: Build Docker Image
          command: |
            chmod +x run_docker.sh
            ./run_docker.sh
      - run:
          name: Upload to docker Hub
          command: |
            chmod +x upload_docker.sh
            ./upload_docker.sh

  deploy:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update && apk add bash
            apk add --update curl
      - aws-cli-setup-python
      - kubernetes/install
      - run:
          name: Deploy Container to EKS
          command: |
            aws eks --region us-west-2 update-kubeconfig --name Capstone-EKS
            kubectl config use-context arn:aws:eks:us-west-2:877716312368:cluster/Capstone-EKS
            kubectl apply -f kubernetes/aws-auth.yml
            kubectl apply -f kubernetes/deployment.yml
            kubectl apply -f kubernetes/service.yml
            kubectl get nodes
            kubectl get deployment
            kubectl get pod -o wide
            kubectl describe deployment
            kubectl describe pods
            kubectl describe service
            kubectl get service/capstone-eks

  rolling-update:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update && apk add bash
            apk add --update curl
      - aws-cli-setup-python
      - kubernetes/install
      - run:
          name: Rolling update
          command: |
            kubectl set image capstone-image capstone-image=capstone-image:latest
            kubectl rollout status deployment capstone-image

  smoke-test:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update && apk add bash
            apk add --update curl
      - aws-cli-setup-python
      - kubernetes/install
      - run:
          name: Frontend smoke test
          command: |
            URL="https://www.google.com"
            echo $URL          
            if curl -s ${URL} | grep "Welcome"
              then
                echo "if"
                return 0
              else
                echo "else"
                return 0
            fi            

  cleanup:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update && apk add bash
            apk add --update curl
      - setup_remote_docker:
          version: 19.03.13      
      - run:
          name: Install Docker client
          command: apk add docker-cli
      - run:
          name: Perform Cleanup
          command: |
            docker system prune

workflows:
  default:
    jobs:
      - lint
      - build-upload-image:
          requires: [lint]
      - deploy:
          requires: [upload-image]
          filters:
            branches:
              only: [main]          
      - smoke-test:
          requires: [deploy]
      - cleanup:
          requires: [smoke-test]
