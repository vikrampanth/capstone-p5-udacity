version: 2.1

defaultpythonimage: &defaultpythonimage
  docker:
    - image: python:3.7-alpine3.11

orbs:
  aws-cli: circleci/aws-cli@1.3.0

jobs:

  build:
    <<: *defaultpythonimage
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13      
      - run:
          name: Install dependencies
          command: |
            apk update && apk add bash
      - run:
          name: Install Docker client
          command: apk add docker-cli
      - run:
          name: Build Docker Image
          command: |
            chmod +x run_docker.sh
            ./run_docker.sh

  lint:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update
            apk add --update make
      - run:
          name: "Linting"
          command: |
            make hadolint-install
            make lint

  upload-image:
    <<: *defaultpythonimage
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13      
      - run:
          name: Install dependencies
          command: |
            apk update && apk add bash
      - run:
          name: Install Docker client
          command: apk add docker-cli
      - run:
          name: Build Docker Image
          command: |
            chmod +x build_docker.sh
            ./build_docker.sh
      - run:
          name: Upload to docker Hub
          command: |
            chmod +x upload_docker.sh
            ./upload_docker.sh

  deploy:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk update && apk add bash
      - run:
          name: Deploy frontend objects
          command: |
            ls -la
            

  smoke-test:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add --update curl
      - run:
          name: Frontend smoke test
          command: |
            URL="https://www.google.com"
            echo $URL          
            if curl -s ${URL} | grep "Welcome"
              then
                echo "if"
                return 0
              else
                echo "else"
                return 0
            fi            

  cleanup:
    <<: *defaultpythonimage
    steps:
      - checkout
      - run:
          name: Perform Cleanup
          command: |
            docker system prune

workflows:
  default:
    jobs:
      - build
      - lint:
          requires: [build]
      - upload-image:
          requires: [lint]
      - deploy:
          requires: [upload-image]
          filters:
            branches:
              only: [master]          
      - smoke-test:
          requires: [deploy]
      - cleanup:
          requires: [smoke-test]
